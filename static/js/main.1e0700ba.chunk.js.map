{"version":3,"sources":["components/Form/Form.module.css","components/Filter/Filter.module.css","components/Contacts/Contacts.module.css","components/Container/Container.jsx","components/Form/Form.jsx","components/Contacts/ContactItem.jsx","components/Contacts/ContactsList.jsx","components/Filter/Filter.jsx","App.js","index.js"],"names":["module","exports","Container","children","className","Form","onAdd","isUnique","useState","name","number","contact","setContact","handleChangeContact","e","target","value","resetForm","styles","container","onSubmit","preventDefault","newContact","id","uuidv4","label","label__text","input","type","placeholder","onChange","pattern","title","required","button","ContactItem","onDelete","onClick","Contacts","contacts","map","Filter","App","setContacts","filter","setFilter","prevState","existingContact","find","alert","currentTarget","ContactsList","normalizedFilter","toLowerCase","includes","handleVisibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1e0700ba.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Form_container___cwBN\",\"label\":\"Form_label__15SAE\",\"label__text\":\"Form_label__text__2_UXB\",\"input\":\"Form_input__2ESfd\",\"button\":\"Form_button__243jh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3DcZT\",\"label__text\":\"Filter_label__text__140-_\",\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Contacts_button__3OGpI\"};","import './Container.css';\n\nconst Container = ({ children }) => <div className=\"Container\">{children}</div>;\n\nexport default Container;\n","import { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport styles from './Form.module.css';\n\nconst Form = ({ onAdd, isUnique }) => {\n  const [contact, setContact] = useState({\n    name: '',\n    number: '',\n  });\n\n  const handleChangeContact = e =>\n    setContact({\n      ...contact,\n      [e.target.name]: e.target.value,\n    });\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    const newContact = {\n      id: uuidv4(),\n      name: contact.name,\n      number: contact.number,\n    };\n    if (isUnique(contact.name)) {\n      onAdd(newContact);\n    }\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setContact({ name: '', number: '' });\n  };\n\n  return (\n    <form className={styles.container} onSubmit={handleFormSubmit}>\n      <label className={styles.label}>\n        <span className={styles.label__text}>Name</span>\n\n        <input\n          className={styles.input}\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Enter name\"\n          value={contact.name}\n          onChange={handleChangeContact}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n\n      <label className={styles.label}>\n        <span className={styles.label__text}>Number</span>\n\n        <input\n          className={styles.input}\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"Enter number\"\n          value={contact.number}\n          onChange={handleChangeContact}\n          // pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n          // title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n\n      <button type=\"submit\" className={styles.button}>\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default Form;\n","import styles from './Contacts.module.css';\n\nconst ContactItem = ({ contact, onDelete }) => {\n  return (\n    <li>\n      <span>{contact.name} : </span>\n      <span>{contact.number}</span>\n      <button className={styles.button} onClick={() => onDelete(contact.id)}>\n        Delete\n      </button>\n    </li>\n  );\n};\n\nexport default ContactItem;\n","import ContactItem from './ContactItem';\n\nconst Contacts = ({ contacts, onDelete }) => {\n  return (\n    <ul>\n      {contacts.map(contact => (\n        <ContactItem key={contact.id} contact={contact} onDelete={onDelete} />\n      ))}\n    </ul>\n  );\n};\n\nexport default Contacts;\n","import styles from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => (\n  <label className={styles.label}>\n    <span className={styles.label__text}>Filter by name</span>\n\n    <input\n      className={styles.input}\n      type=\"text\"\n      value={value}\n      onChange={onChange}\n      placeholder=\"Enter name for search\"\n    />\n  </label>\n);\n\nexport default Filter;\n","import { useState } from 'react';\nimport './App.css';\nimport Container from './components/Container';\nimport Form from './components/Form';\nimport ContactsList from './components/Contacts';\nimport Filter from './components/Filter';\n\nconst App = () => {\n  const [contacts, setContacts] = useState([\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  ]);\n  const [filter, setFilter] = useState('');\n\n  const handleAddContact = newContact =>\n    setContacts(prevState => [...prevState, newContact]);\n\n  const handleCheckUnique = name => {\n    const existingContact = !!contacts.find(contact => contact.name === name);\n    existingContact && alert(`${name} is already in contacts`);\n    return !existingContact;\n  };\n\n  const handleDeleteContact = id => {\n    setContacts(contacts => contacts.filter(contact => contact.id !== id));\n  };\n\n  const handleFilteredContact = e => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const handleVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <Form onAdd={handleAddContact} isUnique={handleCheckUnique} />\n      <h2>Contacts</h2>\n      <Filter value={filter} onChange={handleFilteredContact} />\n      <ContactsList\n        contacts={handleVisibleContacts()}\n        onDelete={handleDeleteContact}\n      />\n    </Container>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}